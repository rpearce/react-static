{"name":"React-static","tagline":"React static site generator framework for Node.js","body":"# react-static\r\nReact static site generator framework for Node.js.\r\n\r\n## What is this?\r\nThis project exists as a static site generator that utilizes React components for markup but, unlike other static site generators, also generates the client-side React JavaScript to allow the linking between pages to be incredibly fast out of the box. This means you'll also be able to have any other fancy client-side-oriented React bundled, as well.\r\n\r\nUnder the hood, this tool builds off of [React](https://github.com/facebook/react), [react-router](https://github.com/rackt/react-router) and [nodejs](https://github.com/nodejs/node) to build static markup and JavaScript.\r\n\r\n## Installation\r\nGiven you have a `package.json` file, you'll need to install and save the `react-static` package:\r\n\r\n```\r\n$ npm install -g react-static\r\n```\r\n\r\n## Usage\r\nCreate a new `react-static` project:\r\n\r\n```\r\n$ react-static new portfolio/\r\nInstalling react-static in to `portfolio/`\r\n=> Successfully installed in to `portfolio/`\r\n=> Run the following to complete setup:\r\n\r\n    $ cd portfolio/ && npm install\r\n\r\n=> Once setup is complete, to run the development server:\r\n\r\n    $ react-static serve\r\n```\r\n\r\nChange directory in to `portfolio/` and install dependencies:\r\n\r\n```\r\n$ cd portfolio/ && npm install\r\n```\r\n\r\nThis might take a minute. Once your dependencies are installed, start the local dev bundling and watching:\r\n\r\n```\r\n$ react-static serve\r\n\r\n> @ build /Users/rpearce/Desktop/portfolio\r\n> npm run lint && babel-node --optional es7.asyncFunctions --stage 0 \"index.js\"\r\n\r\n> @ lint /Users/rpearce/Desktop/portfolio\r\n> eslint src\r\n\r\n=> Building static assets...\r\n=> Static assets written to _site/\r\n=> A development server is running at http://localhost:4000\r\n```\r\n\r\nNavigate to [http://localhost:4000](http://localhost:4000) and see the dummy components in action.\r\n\r\nFrom this point on, all you need to do with regards to this core functionality is make changes to your app, and `react-static serve` will re-bundle and re-serve everything automatically.\r\n\r\n_NOTE: Do not edit anything in the `\\_site/` folder. This is regularly removed and recreated._\r\n\r\n### Creating a Component\r\nInside of the `src/components/` components directory is where your components live, and you are free to structure them in any way you see fit, but if you change the location of `routes.js`, you're going to have problems.\r\n\r\nCreate a new file, e.g., `src/components/About.react.js`, and place this content inside of it:\r\n\r\n```js\r\nimport React from 'react';\r\n\r\nconst About = () =>\r\n  <main role=\"main\">\r\n    <header>\r\n      <h1>About</h1>\r\n    </header>\r\n  </main>\r\n\r\nAbout.meta = {\r\n  title: 'About',\r\n  description: 'This is the about us page'\r\n};\r\n\r\nexport default About;\r\n```\r\n\r\nIf you're wondering where `class` and `extend` are, don't worry! This is a stateless functional component, as included in the [React 0.14 release notes](NEED LINK), that also sets a few static properties: `title` and `description` that are used in `src/components/Root.react.js` to provide metadata for your page (extend this as you wish).\r\n\r\nNext go to your `src/components/routes.js` file and import your `About` component:\r\n\r\n```js\r\nimport About from './About.react';\r\n```\r\n\r\nand add the route information to the `routes` object:\r\n\r\n```js\r\nconst routes = {\r\n  // other routes\r\n\r\n  About: {\r\n    path: 'desired/path/to/about.html',\r\n    component: About\r\n  }\r\n}\r\n```\r\n\r\nOnce you've done this, if you haven't already run\r\n\r\n```\r\n$ react-static serve\r\n```\r\n\r\ngo ahead and do that. Happy coding!","google":"UA-54506099-1","note":"Don't delete this file! It's used internally to help with page regeneration."}